package control;

recipe ArrayInitializer(node root, node exit, out node entry) {
	try {
		// Initializer without expressions.
		entry := rule.ArrayInitializer-NoExpr(root, exit);
	} else {
		// Initializer with arguments.
		int exprMax := rule.ArrayInitializer-ExprCount(root);
		int exprNr :=  rule.help.add(exprMax, 0);
		node eroot, eentry;
		node eexit := rule.help.assign(root);
		do {
			eroot := rule.ArrayInitializer-WithExpr(root, exprNr);
			eentry := Expr(eroot, eexit);
			eexit := rule.help.assign(eentry);
			exprNr := rule.help.sub(exprNr, 1);
		} while (rule.help.ge(exprNr, 0))
		entry := rule.help.assign(eentry);
		rule.help.createFlow(root, exit);
	}
}
