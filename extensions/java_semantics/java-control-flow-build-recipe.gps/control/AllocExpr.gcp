package control;

recipe AllocExpr(node root, node exit, out node entry) {
	// Begin by creating the flow to exit straight away.
	rule.AllocExpr-Init(root, exit);
	try {
		// Allocation without arguments.
		entry := rule.AllocExpr-NoArgs(root);
	} else {
		// Allocation with arguments.
		int argMax := rule.AllocExpr-ArgCount(root);
		int argNr :=  rule.help.add(argMax, 0);
		node aroot, aentry;
		node aexit := rule.help.assign(root);
		do {
			aroot := rule.AllocExpr-WithArgs(root, argNr);
			aentry := Expr(aroot, aexit);
			aexit := rule.help.assign(aentry);
			argNr := rule.help.sub(argNr, 1);
		} while (rule.help.ge(argNr, 0))
		entry := rule.help.assign(aentry);
	}
}
