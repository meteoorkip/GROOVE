package control;

recipe DoStmt(node root, node exit, out node entry) {
	// Match the condition expression and the action statement.
	node croot, aroot := rule.DoStmt-Down(root);
	// Build the flow for the condition subexpression.
	node centry := Expr(croot, root);
	// Build the flow for the action statement.
	entry := Stmt(aroot, centry);
	// Wrap the build as we traverse back in the AST when returning from the recursion.
	rule.DoStmt-Up(root, croot, entry, exit);
}
