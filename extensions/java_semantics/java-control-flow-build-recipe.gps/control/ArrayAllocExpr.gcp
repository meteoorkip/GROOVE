package control;

recipe ArrayAllocExpr(node root, node exit, out node entry) {
	try {
		node iroot := rule.ArrayAllocExpr-WithInit(root);
		entry := ArrayInitializer(iroot, exit);
	} else {
		int dimMax := rule.ArrayAllocExpr-DimCount(root);
		int dimNr := rule.help.add(dimMax, 0);
		node droot, dentry;
		node dexit := rule.help.assign(root);
		do {
			droot := rule.ArrayAllocExpr-WithDim(root, dimNr);
			dentry := Expr(droot, dexit);
			dexit := rule.help.assign(dentry);
			dimNr := rule.help.sub(dimNr, 1);
		} while (rule.help.ge(dimNr, 0))
		entry := rule.help.assign(dentry);
		rule.help.createFlow(root, exit);
	}
}
