package control;

recipe ForeachStmt(node root, node exit, out node entry) {
	// Match the collection, variable and action statement.
	node croot, droot, aroot := rule.ForeachStmt-Down(root);
	// Build the flow for the collection reference.
	node centry := Ref(croot, root);
	// Build the flow for the variable declaration.
	entry := LocalDecl(droot, centry);
	// Build the flow for the action statement.
	node aentry := Expr(aroot, centry);
	// Wrap the build as we traverse back in the AST when returning from the recursion.
	rule.ForeachStmt-Up(root, croot, aentry, exit);
}
